/**
 * Link.java - A class representing a Link established between two nodes
 * 
 * @author Mahesh S. Perera
 */

package thesis.mhde.element;

public class Link {

	private String flag;// flag variable to set the node which currently uses
						// this link
	private String name;// name of the link
	private String leftNode;// left side node that uses this link
	private String rightNode;// right side node that uses this link
	private double delay;// communication delay of this link
	private byte[][] phase0_data = new byte[2][];// array to store path and
													// signature
	private String challenge;// challenge which is passed to the next user
	private String response;// response which is passed to the next user
	private double timer;// timer value to store the time taken during the
						// protocol

	public Link(String name, String leftNode, String rightNode, double delay) {
		this.flag = "";
		this.name = name;
		this.leftNode = leftNode;
		this.rightNode = rightNode;
		this.delay = delay;
		this.timer = 0;
	}

	/**
	 * Returns the name of the flag owner
	 * 
	 * @return the flag value
	 */
	public String getFlag() {
		return flag;
	}

	/**
	 * Set the flag value
	 * 
	 * @param flag
	 *            name of the user who owns this flag
	 */
	public void setFlag(String flag) {
		this.flag = flag;
	}

	/**
	 * Returns the name of the link
	 * 
	 * @return link name
	 */
	public String getName() {
		return name;
	}

	/**
	 * Returns the name of the left side node of this link
	 * 
	 * @return the left node
	 */
	public String getLeftNode() {
		return leftNode;
	}

	/**
	 * Returns the name of the right side node of this link
	 * 
	 * @return the right node
	 */
	public String getRightNode() {
		return rightNode;
	}

	/**
	 * Returns the transmission time of this node
	 * 
	 * @return the transmission time
	 */
	public double getDelay() {
		return this.delay;
	}

	/**
	 * Returns the phase-0 data: a path and its signature
	 * 
	 * @return the phase-0 data
	 */
	public byte[][] getPhase0_data() {
		return phase0_data;
	}

	/**
	 * Set the phase-0 data
	 * 
	 * @param path
	 *            the path
	 * @param sign
	 *            the signature of the path
	 */
	public void setPhase0_data(byte[] path, byte[] sign) {
		this.phase0_data[0] = path;
		this.phase0_data[1] = sign;
	}

	/**
	 * Returns the 1-bit challenge received by this link
	 * 
	 * @return the challenge
	 */
	public String getChallenge() {
		return challenge;
	}

	/**
	 * Set the 1-bit challenge generated by the verifier
	 * 
	 * @param challenge
	 *            challenge
	 */
	public void setChallenge(String challenge) {
		this.challenge = challenge;
	}

	/**
	 * Returns the response calculated by the previous node
	 * 
	 * @return the response
	 */
	public String getResponse() {
		return response;
	}

	/**
	 * Set the response calculated by the previous node
	 * 
	 * @param response
	 *            the response bit
	 */
	public void setResponse(String response) {
		this.response = response;
	}

	/**
	 * Returns the time value. This is actually the timer set by the verifier
	 * 
	 * @return the timer value
	 */
	public double getTimer() {
		return timer;
	}

	/**
	 * Set the time value as signaled by the previous or next user node
	 * 
	 * @param timer
	 */
	public void setTimer(double timer) {
		this.timer = timer;
	}

}
